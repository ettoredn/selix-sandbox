## <summary>Apache/SELinux plus</summary>

########################################
## <summary>
##	Allow a domain to perform as a web server process
##	with necessary minimum privileges.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`apache_base_webapp',`
	gen_require(`
		attribute httpd_server_domains;
		type httpd_t;
		type httpd_config_t;
		type httpd_log_t;
		type httpd_sys_content_t;
		type httpd_suexec_exec_t;
	')
	########################################
	#
	# Local declarations
	#
	typeattribute $1 httpd_server_domains;
	typebounds httpd_t $1;
	role system_r types $1;

	# Process
	allow httpd_t $1:process { dyntransition };
	allow $1 httpd_t:fd use;	
	
	# Network
	# no connect, listen or bind
	allow $1 httpd_t:stream_socket_class_set { rw_socket_perms };
	allow $1 self:stream_socket_class_set { create_socket_perms }; # FPM
	corenet_tcp_connect_all_unreserved_ports($1) # FPM
	
	# device nodes
	dev_read_sysfs($1)
	dev_read_rand($1)
	dev_read_urand($1)
	dev_rw_crypto($1)
	
	# Log
	logging_send_syslog_msg($1)
	
	# Misc files
	miscfiles_read_localization($1)
	miscfiles_read_fonts($1)
	miscfiles_read_certs($1)
	apache_search_sys_content($1)
	
	# Search home directories
	userdom_search_user_home_content( $1 )

	# allow $1 httpd_t:shm rw_shm_perms;
	# allow $1 httpd_t:sem rw_sem_perms;
	
	# allow to read the web servers config files
	# allow $1 httpd_config_t:dir list_dir_perms;
	# read_files_pattern($1, httpd_config_t, httpd_config_t)
	# read_lnk_files_pattern($1, httpd_config_t, httpd_config_t)
	
	# allow to append the web servers log files
	# allow $1 httpd_log_t:dir setattr;
	# create_files_pattern($1, httpd_log_t, httpd_log_t)
	# append_files_pattern($1, httpd_log_t, httpd_log_t)
	# read_files_pattern($1, httpd_log_t, httpd_log_t)
	# read_lnk_files_pattern($1, httpd_log_t, httpd_log_t)
	# logging_log_filetrans($1, httpd_log_t, file)
	
	# Read-only accesses to system contents
	# allow $1 httpd_sys_content_t:dir list_dir_perms;
	# read_files_pattern($1, httpd_sys_content_t, httpd_sys_content_t)
	# read_lnk_files_pattern($1, httpd_sys_content_t, httpd_sys_content_t)
	
	# /proc
	# allow $1 httpd_t:dir list_dir_perms;
	# kernel_read_kernel_sysctls($1)
	# kernel_read_system_state($1)
	# filesystems
	# fs_getattr_all_fs($1)
	# fs_search_auto_mountpoints($1)
	
	# misc permissions
	# domain_use_interactive_fds($1)
	
	# files_read_usr_files($1)
	# files_list_mnt($1)
	# files_search_spool($1)
	# files_read_var_lib_files($1)
	# files_search_home($1)
	# files_getattr_home_dir($1)
	# for modules that want to access /etc/mtab
	# files_read_etc_runtime_files($1)
	# Allow httpd_t to have access to files such as nisswitch.conf
	# files_read_etc_files($1)
	
	# libs_read_lib_files($1)
	# seutil_dontaudit_search_config($1)
	
	# userdom_use_unpriv_users_fds($1)
')

########################################
## <summary>
##	Allos a domain to access UBAC types for web contents
## </summary>
## <param name="prefix">
##	<summary>
##	The prefix to be used for deriving type names.
##	</summary>
## </param>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
# user_httpd_type - htttpd_files/dir_type - httpd_htaccess_type - php_script_type
interface(`apache_user_webapp',`
	gen_require(`
		type httpd_t;
		type $1, $2, $3, $4;
	')

	# .htaccess files
	allow httpd_t $3: file read_file_perms;
	allow $1 $3:file read_file_perms;

	read_files_pattern( httpd_t, $2, $2 )	
	read_files_pattern( $1, $2, $2 )

	list_dirs_pattern( httpd_t, $2, $2 ) # List directories
	list_dirs_pattern( $1, $2, $2 ) # List directories
	
	# getattr php scripts
	getattr_files_pattern( httpd_t, $2, $4 )
	getattr_files_pattern( $1, $2, $4 )

	# read_lnk_files_pattern($2, httpd_$1_content_t, httpd_$1_content_t)
')
